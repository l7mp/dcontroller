apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: dcontroller
  name: dcontroller-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: operators.dcontroller.io
spec:
  group: dcontroller.io
  names:
    categories:
    - dcontroller
    kind: Operator
    listKind: OperatorList
    plural: operators
    shortNames:
    - operators
    singular: operator
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Operator is an abstraction of a basic unit of automation, a set of related controllers working
          on a single shared view of system resources.

          // +kubebuilder:printcolumn:name="ControllerNum",type=integer,JSONPath=`length(.spec.controllers)`
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of an operator.
            properties:
              controllers:
                description: Controllers is a list of controllers that collectively
                  implement the operator.
                items:
                  description: |-
                    Controller is a translator that processes a set of base resources via a declarative pipeline
                    into a delta on the target resource. A controller is defined by a name, a set of sources, a
                    processing pipeline and a target.
                  properties:
                    name:
                      description: Name is the unique name of the controller.
                      type: string
                    pipeline:
                      description: Pipeline is an aggregation pipeline applied to
                        base objects.
                      x-kubernetes-preserve-unknown-fields: true
                    sources:
                      description: The base resource(s) the controller watches.
                      items:
                        description: Source is a watch source that feeds deltas into
                          the controller.
                        properties:
                          apiGroup:
                            description: Group is the API group. Default is "view.dcontroller.io".
                            type: string
                          kind:
                            description: Kind is the type of the resource. Mandatory.
                            type: string
                          labelSelector:
                            description: LabelSelector is an optional label selector
                              to filter events on this source.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          namespace:
                            description: Namespace, if given, restricts the source
                              to generate events only from the given namespace.
                            type: string
                          predicate:
                            description: Predicate is a controller runtime predicate
                              for filtering events on this source..
                            x-kubernetes-preserve-unknown-fields: true
                          version:
                            description: Version is the version of the resource. Optional.
                            type: string
                        required:
                        - kind
                        type: object
                      type: array
                    target:
                      description: The target resource the results are to be added.
                      properties:
                        apiGroup:
                          description: Group is the API group. Default is "view.dcontroller.io".
                          type: string
                        kind:
                          description: Kind is the type of the resource. Mandatory.
                          type: string
                        type:
                          description: Type is the type of the target.
                          type: string
                        version:
                          description: Version is the version of the resource. Optional.
                          type: string
                      required:
                      - kind
                      type: object
                  required:
                  - name
                  - pipeline
                  - sources
                  - target
                  type: object
                maxItems: 24
                minItems: 1
                type: array
            required:
            - controllers
            type: object
          status:
            description: Status defines the current state of the operator.
            properties:
              controllers:
                items:
                  description: ControllerStatus specifies the status of a controller.
                  properties:
                    conditions:
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    lastErrors:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - controllers
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dcontroller
  namespace: dcontroller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dcontroller-leader-election-role
  namespace: dcontroller-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dcontroller-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - dcontroller.io
  resources:
  - operators
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dcontroller.io
  resources:
  - operators/finalizers
  - operators/status
  verbs:
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dcontroller-leader-election-rolebinding
  namespace: dcontroller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dcontroller-leader-election-role
subjects:
- kind: ServiceAccount
  name: dcontroller
  namespace: dcontroller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dcontroller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dcontroller-role
subjects:
- kind: ServiceAccount
  name: dcontroller
  namespace: dcontroller-system
---
apiVersion: v1
data:
  manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 92062b70.dcontroller.io
kind: ConfigMap
metadata:
  name: dcontroller-config
  namespace: dcontroller-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: dcontroller
  name: dcontroller
  namespace: dcontroller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: dcontroller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: dcontroller
      labels:
        control-plane: dcontroller
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /dcontroller-manager
        image: '{{ .Values.image.name }}:{{ .Values.image.tag }}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: dcontroller
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: dcontroller
      terminationGracePeriodSeconds: 10
