apiVersion: dcontroller.io/v1alpha1
kind: Operator
metadata:
  name: ep-operator
spec:
  controllers:
    # service controller:
    # - filter services that have an endpointslice controller annotation
    # - convert into simpler shape
    # - demux on spec.ports and
    - name: service-controller
      sources:
        - apiGroup: ""
          kind: Service
      pipeline:
        "@aggregate":
          - "@select":
              "@exists": '$["metadata"]["annotations"]["dcontroller.io/endpointslice-controller-enabled"]'
          - "@project":
              metadata:
                name: $.metadata.name
                namespace: $.metadata.namespace
              spec:
                serviceName: $.metadata.name
                type: $.spec.type
                ports: $.spec.ports
          - "@unwind": $.spec.ports
      target:
        kind: ServiceView
    # endpointslice controller:
    # - join services with the corresponding endpoint slices
    # - create a unique service-id that will be used in gather
    # - demux on "$.endpoints"
    # - filter ready addresses
    # - demux on $.endpoints.addresses
    # - convert into simpler shape
    - name: endpointslice-controller
      sources:
        - kind: ServiceView
        - apiGroup: "discovery.k8s.io"
          kind: EndpointSlice
      pipeline:
        "@join":
          "@and":
            - '@eq':
                - $.ServiceView.spec.serviceName
                - '$["EndpointSlice"]["metadata"]["labels"]["kubernetes.io/service-name"]'
            - '@eq':
                - $.ServiceView.metadata.namespace
                - $.EndpointSlice.metadata.namespace
        "@aggregate":
          - "@project":
              metadata:
                name: $.ServiceView.metadata.name
                namespace: $.ServiceView.metadata.namespace
              spec: $.ServiceView.spec
              endpoints: $.EndpointSlice.endpoints
          - "@unwind": $.endpoints
          - "@select":
              "@eq": ["$.endpoints.conditions.ready", true]
          - "@unwind": $.endpoints.addresses
          - "@project":
              metadata:
                namespace: $.metadata.namespace
              spec:
                serviceName: $.spec.serviceName
                type: $.spec.type
                port: $.spec.ports.port
                targetPort: $.spec.ports.targetPort
                protocol: $.spec.ports.protocol
                address: $.endpoints.addresses
          - "@project":
              - "$.": $.
              - metadata:
                  name:
                    "@concat":
                      - $.spec.serviceName
                      - "-"
                      - { "@hash": $.spec }
      target:
        kind: EndpointView
